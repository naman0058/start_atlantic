<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Star Atlantic | Rating</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">
<style>
    @charset "UTF-8";
@import url("https://fonts.googleapis.com/css2?family=Quicksand:wght@500;700&display=swap");
* {
  font-family: "Quicksand", sans-serif;
}

body {

  margin: 0;
  display: flex;
  justify-content: center;
  background-color: #16181A;
  overflow-x: hidden;
}

.supaviews,
.supaview,
.supaerror {
  border-radius: 10px;
}

.supaviews {
  position: relative;
  width: 500px;
  margin: 125px 0 50px 0;
  color: #FFFFFF;
  background-color: #1C1E20;
}
.supaviews__logo {
  position: absolute;
  width: 200px;
  right: -55px;
  top: -100px;
  transition: 0.2s ease-in-out;
}
.supaviews__logo:hover {
  transform: scale(1.1);
}
.supaviews__gradient {
  position: absolute;
  right: 50px;
  top: 0;
  z-index: -1;
  display: block;
  height: 1100px;
  width: 1100px;
  transform: translate(50%, -50%);
  background-image: radial-gradient(rgba(110, 203, 144, 0.2) 15%, #16181A 60%);
}

.supaview,
.supaerror {
  margin: 20px;
  padding: 25px;
}

.supaview {
  background-color: #24262B;
}
.supaview__stars {
  margin-bottom: 15px;
  font-size: 25px;
  color: #1C1E20;
}
.supaview__stars .checked {
  color: #6ECB90;
  text-shadow: 0 0 6px #4DA76EBD;
}
.supaview__name {
  font-weight: 700;
  font-size: 20px;
}
.supaview__date {
  margin-top: 15px;
  color: #7D7F81;
}
.supaview__rating {
  display: block;
  float: left;
  padding: 0;
  margin-bottom: 15px;
  border: none;
}
.supaview__rating > input {
  display: none;
}
.supaview__rating > label:before {
  display: inline-block;
  margin-right: 5px;
  font-family: "Font Awesome 5 Free";
  font-size: 25px;
  font-weight: 900;
  content: "ï€…";
}
.supaview__rating > label {
  float: right;
  color: #1C1E20;
  cursor: pointer;
  transition: 0.15s ease-in-out;
}
.supaview__rating > input:checked ~ label, .supaview__rating:not(:checked) > label:hover, .supaview__rating:not(:checked) > label:hover ~ label {
  color: #6ECB90;
  text-shadow: 0 0 6px #4DA76EBD;
}
.supaview__rating > input:checked + label:hover, .supaview__rating > input:checked ~ label:hover, .supaview__rating > label:hover ~ input:checked ~ label, .supaview__rating > input:checked ~ label:hover ~ label {
  color: #4DA76EBD;
}
.supaview__title {
  margin-top: 0;
}
.supaview__copy input, .supaview__copy textarea {
  width: calc(100% - 20px);
  padding: 10px;
  margin-bottom: 10px;
  border-radius: 5px;
  border: 1px solid #16181A;
  color: #FFFFFF;
  background-color: transparent;
  outline: none;
}
.supaview__copy input:focus, .supaview__copy textarea:focus {
  border: 1px solid #FFFFFF;
}
.supaview__submit {
  padding: 10px 15px;
  font-weight: 700;
  color: #FFFFFF;
  background-color: #64B883;
  border: none;
  border-radius: 20px;
  cursor: pointer;
  outline: none;
  transition: 0.2s ease-in-out;
}
.supaview__submit:hover {
  background-color: #6ECB90;
}

.supaerror {
  background-color: #E56460;
}
</style>
</head>
<body>
    
<div class="supaviews" style="align-content:center;">
	<img class="supaviews__logo" src="https://app.supabase.io/img/supabase-logo.svg"/>
	<div class="supaviews__gradient"></div>
	<div class="supaviews__add">
		<div class="supaview">
			<h1 class="supaview__title">Add a new review</h1>
			<form id="review" action="/rating-insert" method="post">
				<fieldset class="supaview__rating">
					<input type="radio" id="star5" name="rating" value="5" /><label for="star5"></label>
					<input type="radio" id="star4" name="rating" value="4" /><label for="star4"></label>
					<input type="radio" id="star3" name="rating" value="3" /><label for="star3"></label>
					<input type="radio" id="star2" name="rating" value="2" /><label for="star2"></label>
					<input type="radio" id="star1" name="rating" value="1" /><label for="star1"></label>
				</fieldset>
                <input type="hidden" name="tourid" value="<%=tourid%>">
				<div class="supaview__copy">
					<textarea name="review" placeholder="Review" rows="5"></textarea>
				</div>
				<button class="supaview__submit">Submit review</button>
			</form>
		</div>
	</div>

</div>




</body>
</html>
<script>
    // Supabase import
import { createClient } from 'https://jspm.dev/@supabase/supabase-js';

// Supabase initialization
const supaURL = '';
const supaKEY = '';
const supabase = createClient(supaURL, supaKEY);

/*
Supabase Database structure
	table name: supaviews
	id: int4, primary key, created with the table
	name: varchar, required
	message: text, required
	rating: int4, required
	created: date, required, default value now()
*/

// Supaviews implementation
const reviewsEl = document.querySelector('.supaviews__list');

function renderError(error) {
	console.warn(error);
	reviewsEl.innerHTML = `<div class="supaerror">${error}</div>`;
}

function renderStars(rating) {
	let rating = '';
	for (let i = 0; i < 5; i++) {
		rating += `<i class="fas fa-star ${i < rating ? 'checked' : ''}"></i>`;
	}
	return rating;
}

function renderReview(review) {
	const { name, message, created } = review;
	const stars = renderStars(review.rating);
	
	const element = document.createElement("DIV");
	element.classList.add('supaview');
	element.innerHTML = `
		<div class="supaview__stars">${stars}</div>
		<div class="supaview__name">${name}</div>
		<div class="supaview__message">${message}</div>
		<div class="supaview__date">${created}</div>
	`;
	
	return element;
}

async function renderReviews() {
	// GET all reviews
	const { data: supaviews, error } = await supabase.from('supaviews').select('*');
	
	if(error) {
		renderError(`ERROR: ${error.message}`);
		return;
	}
	
	reviewsEl.innerHTML = '';
	supaviews.forEach(supaview => {
		reviewsEl.prepend(renderReview(supaview));
	});
}

function handleForm() {
	const form = document.getElementById('review');
	const obj = {};
	form.addEventListener('submit', async (e) => {
		e.preventDefault();
		
		const formData = new FormData(form);
		for (let key of formData.keys()) {
			obj[key] = formData.get(key);
		}
		
		// INSERT a new review
		const { error } = await supabase.from('supaviews').insert([obj]);		
		if(error) {
			renderError(`ERROR: ${error.message}`);
			return;
		}
		
		form.reset();
		renderReviews();
	});
}

renderReviews();
handleForm();

	


</script>